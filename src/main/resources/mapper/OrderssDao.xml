<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yto.net.cn.dao.OrderssDao" >
  <resultMap id="BaseResultMap" type="yto.net.cn.bean.Orderss" >
    <id column="orders_id" property="ordersId" jdbcType="BIGINT" />
    <result column="orders_number" property="ordersNumber" jdbcType="VARCHAR" />
    <result column="login_id" property="loginId" jdbcType="BIGINT" />
    <result column="login_username" property="loginUsername" jdbcType="VARCHAR" />
    <result column="address_id" property="addressId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="logistics_id" property="logisticsId" jdbcType="BIGINT" />
    <result column="arrive_time" property="arriveTime" jdbcType="TIMESTAMP" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="pay_status" property="payStatus" jdbcType="TINYINT" />
    <result column="pay_money" property="payMoney" jdbcType="DECIMAL" />
    <result column="pay_id" property="payId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      orders_id, orders_number, login_id, login_username, address_id, goods_id, logistics_id, 
      arrive_time, pay_type, pay_status, pay_money, pay_id, create_time, update_time, status
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="yto.net.cn.bean.OrderssQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderss
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    orders_id,orders_number,login_id,login_username,address_id,goods_id,logistics_id,arrive_time,pay_type,pay_status,pay_money,pay_id,create_time,update_time,status
    from orderss
    where orders_id = #{ordersId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orderss
    where orders_id = #{ordersId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="yto.net.cn.bean.OrderssQuery" >
    delete from orderss
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="yto.net.cn.bean.Orderss" >
    insert into orderss (orders_id, orders_number, login_id, 
      login_username, address_id, goods_id, 
      logistics_id, arrive_time, pay_type, 
      pay_status, pay_money, pay_id, 
      create_time, update_time, status
      )
    values (#{ordersId,jdbcType=BIGINT}, #{ordersNumber,jdbcType=VARCHAR}, #{loginId,jdbcType=BIGINT}, 
      #{loginUsername,jdbcType=VARCHAR}, #{addressId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, 
      #{logisticsId,jdbcType=BIGINT}, #{arriveTime,jdbcType=TIMESTAMP}, #{payType,jdbcType=TINYINT}, 
      #{payStatus,jdbcType=TINYINT}, #{payMoney,jdbcType=DECIMAL}, #{payId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="yto.net.cn.bean.Orderss" >
    insert into orderss
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ordersId != null" >
        orders_id,
      </if>
      <if test="ordersNumber != null" >
        orders_number,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="loginUsername != null" >
        login_username,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="logisticsId != null" >
        logistics_id,
      </if>
      <if test="arriveTime != null" >
        arrive_time,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="payMoney != null" >
        pay_money,
      </if>
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ordersId != null" >
        #{ordersId,jdbcType=BIGINT},
      </if>
      <if test="ordersNumber != null" >
        #{ordersNumber,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=BIGINT},
      </if>
      <if test="loginUsername != null" >
        #{loginUsername,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="logisticsId != null" >
        #{logisticsId,jdbcType=BIGINT},
      </if>
      <if test="arriveTime != null" >
        #{arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="payMoney != null" >
        #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="yto.net.cn.bean.OrderssQuery" resultType="java.lang.Integer" >
    select count(*) from orderss
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderss
    <set >
      <if test="record.ordersId != null" >
        orders_id = #{record.ordersId,jdbcType=BIGINT},
      </if>
      <if test="record.ordersNumber != null" >
        orders_number = #{record.ordersNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.loginId != null" >
        login_id = #{record.loginId,jdbcType=BIGINT},
      </if>
      <if test="record.loginUsername != null" >
        login_username = #{record.loginUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.logisticsId != null" >
        logistics_id = #{record.logisticsId,jdbcType=BIGINT},
      </if>
      <if test="record.arriveTime != null" >
        arrive_time = #{record.arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.payStatus != null" >
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payMoney != null" >
        pay_money = #{record.payMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.payId != null" >
        pay_id = #{record.payId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderss
    set orders_id = #{record.ordersId,jdbcType=BIGINT},
      orders_number = #{record.ordersNumber,jdbcType=VARCHAR},
      login_id = #{record.loginId,jdbcType=BIGINT},
      login_username = #{record.loginUsername,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=BIGINT},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      logistics_id = #{record.logisticsId,jdbcType=BIGINT},
      arrive_time = #{record.arriveTime,jdbcType=TIMESTAMP},
      pay_type = #{record.payType,jdbcType=TINYINT},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      pay_money = #{record.payMoney,jdbcType=DECIMAL},
      pay_id = #{record.payId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="yto.net.cn.bean.Orderss" >
    update orderss
    <set >
      <if test="ordersNumber != null" >
        orders_number = #{ordersNumber,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=BIGINT},
      </if>
      <if test="loginUsername != null" >
        login_username = #{loginUsername,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="logisticsId != null" >
        logistics_id = #{logisticsId,jdbcType=BIGINT},
      </if>
      <if test="arriveTime != null" >
        arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="payMoney != null" >
        pay_money = #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="payId != null" >
        pay_id = #{payId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where orders_id = #{ordersId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="yto.net.cn.bean.Orderss" >
    update orderss
    set orders_number = #{ordersNumber,jdbcType=VARCHAR},
      login_id = #{loginId,jdbcType=BIGINT},
      login_username = #{loginUsername,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      logistics_id = #{logisticsId,jdbcType=BIGINT},
      arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      pay_type = #{payType,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=TINYINT},
      pay_money = #{payMoney,jdbcType=DECIMAL},
      pay_id = #{payId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where orders_id = #{ordersId,jdbcType=BIGINT}
  </update>
</mapper>